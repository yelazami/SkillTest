<?php

namespace ContainerJTZZlzx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGetMeActionService extends App_Shared_Infrastructure_KernelDevDebugContainer
{
    /**
     * Gets the public 'App\Users\Infrastructure\Controller\GetMeAction' shared autowired service.
     *
     * @return \App\Users\Infrastructure\Controller\GetMeAction
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Users/Infrastructure/Controller/GetMeAction.php';
        include_once \dirname(__DIR__, 4).'/src/Shared/Domain/Security/UserFetcherInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Shared/Infrastructure/Security/UserFetcher.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Authorization/AuthorizationCheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Security.php';

        return $container->services['App\\Users\\Infrastructure\\Controller\\GetMeAction'] = new \App\Users\Infrastructure\Controller\GetMeAction(new \App\Shared\Infrastructure\Security\UserFetcher(new \Symfony\Component\Security\Core\Security(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'security.authorization_checker' => ['privates', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', true],
            'security.token_storage' => ['privates', 'security.token_storage', 'getSecurity_TokenStorageService', false],
        ], [
            'security.authorization_checker' => '?',
            'security.token_storage' => '?',
        ]))));
    }
}
